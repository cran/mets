// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// FastCoxPrep
List FastCoxPrep(arma::vec Entry, arma::vec Exit, arma::ivec Status, arma::mat X, arma::uvec Id, bool haveId, bool Truncation);
RcppExport SEXP mets_FastCoxPrep(SEXP EntrySEXP, SEXP ExitSEXP, SEXP StatusSEXP, SEXP XSEXP, SEXP IdSEXP, SEXP haveIdSEXP, SEXP TruncationSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< arma::vec >::type Entry(EntrySEXP );
        Rcpp::traits::input_parameter< arma::vec >::type Exit(ExitSEXP );
        Rcpp::traits::input_parameter< arma::ivec >::type Status(StatusSEXP );
        Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP );
        Rcpp::traits::input_parameter< arma::uvec >::type Id(IdSEXP );
        Rcpp::traits::input_parameter< bool >::type haveId(haveIdSEXP );
        Rcpp::traits::input_parameter< bool >::type Truncation(TruncationSEXP );
        List __result = FastCoxPrep(Entry, Exit, Status, X, Id, haveId, Truncation);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// FastCoxPL
List FastCoxPL(const arma::colvec& beta, const arma::colvec& X, const arma::colvec& XX, const arma::ivec& Sign, const arma::uvec& Jumps);
RcppExport SEXP mets_FastCoxPL(SEXP betaSEXP, SEXP XSEXP, SEXP XXSEXP, SEXP SignSEXP, SEXP JumpsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const arma::colvec& >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< const arma::colvec& >::type X(XSEXP );
        Rcpp::traits::input_parameter< const arma::colvec& >::type XX(XXSEXP );
        Rcpp::traits::input_parameter< const arma::ivec& >::type Sign(SignSEXP );
        Rcpp::traits::input_parameter< const arma::uvec& >::type Jumps(JumpsSEXP );
        List __result = FastCoxPL(beta, X, XX, Sign, Jumps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
